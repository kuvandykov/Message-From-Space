{"remainingRequest":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/KRL/proga/projects/test/Message-From-Space/frontend/src/components/messages.vue?vue&type=template&id=4c44a0da","dependencies":[{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/src/components/messages.vue","mtime":1617793366102},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1617793365330},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1617793366018},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/babel-loader/lib/index.js","mtime":1617793365298},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1617793366042},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1617793365330},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1617793366042}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSJtZXNzYWdlcyI+CiAgICAgICAgPG1lc3NhZ2Ugdi1mb3I9Im1lc3NhZ2UgaW4gbWVzc2FnZXMiIDprZXk9Im1lc3NhZ2UuaWQiCiAgICAgICAgOnRleHQ9Im1lc3NhZ2UudGV4dCIgCiAgICAgICAgOmlkPSJtZXNzYWdlLmlkIiAKICAgICAgICA6cmVhZD0ibWVzc2FnZS5yZWFkIi8+CiAgICA8L2Rpdj4KICAgIAo="},{"version":3,"sources":["/home/KRL/proga/projects/test/Message-From-Space/frontend/src/components/messages.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/KRL/proga/projects/test/Message-From-Space/frontend/src/components/messages.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"messages\">\n        <message v-for=\"message in messages\" :key=\"message.id\"\n        :text=\"message.text\" \n        :id=\"message.id\" \n        :read=\"message.read\"/>\n    </div>\n    \n</template>\n\n<script>\n    import message from \"./message\"\n\n    export default {\n        name: 'messages',\n        components: {\n            message\n        },\n        data() {\n            return{\n                messages: [],\n            }\n        },\n        async created(){\n            var response = await fetch('http://localhost:8000/api/get_messages/');\n            this.messages = await response.json();\n            setInterval(() => this.updateMessages(), 10000);         \n        },  \n        methods: {\n            async updateMessages(){  \n                var id = 0\n                if (this.messages.length != 0){\n\n                    id = this.messages[this.messages.length - 1].id;\n                }              \n                var response = await fetch(`http://localhost:8000/api/get_messages/?last_id=${id}`);              \n                if (await response.ok){\n                    var new_messages = await response.json();\n                    for (let index = 0; index < new_messages.length; index++){ \n                        this.messages.push(new_messages[index]); \n                    }\n                               \n                }\n            },\n        }\n    }\n</script>"]}]}