{"remainingRequest":"/home/lukura/Message-From-Space/frontend/node_modules/thread-loader/dist/cjs.js!/home/lukura/Message-From-Space/frontend/node_modules/babel-loader/lib/index.js!/home/lukura/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/lukura/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lukura/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/lukura/Message-From-Space/frontend/src/components/messages.vue?vue&type=template&id=4c44a0da","dependencies":[{"path":"/home/lukura/Message-From-Space/frontend/src/components/messages.vue","mtime":1617562157145},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1617561885301},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1617562136116},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/babel-loader/lib/index.js","mtime":1617561872516},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1617562142952},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1617561885301},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1617562142756}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCByZXNvbHZlQ29tcG9uZW50IGFzIF9yZXNvbHZlQ29tcG9uZW50IH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJtZXNzYWdlcyIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9tZXNzYWdlID0gX3Jlc29sdmVDb21wb25lbnQoIm1lc3NhZ2UiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xLCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLm1lc3NhZ2VzLCBmdW5jdGlvbiAobWVzc2FnZSkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKF9jb21wb25lbnRfbWVzc2FnZSwgewogICAgICBrZXk6IG1lc3NhZ2UuaWQsCiAgICAgIHRleHQ6IG1lc3NhZ2UudGV4dCwKICAgICAgaWQ6IG1lc3NhZ2UuaWQsCiAgICAgIHJlYWQ6IG1lc3NhZ2UucmVhZAogICAgfSwgbnVsbCwgOCwgWyJ0ZXh0IiwgImlkIiwgInJlYWQiXSk7CiAgfSksIDEyOCkpXSk7Cn0="},{"version":3,"sources":["/home/lukura/Message-From-Space/frontend/src/components/messages.vue"],"names":[],"mappings":";;AACS,EAAA,KAAK,EAAC;;;;;uBAAX,YAAA,CAKM,KALN,EAAA,UAAA,EAKM,E,kBAJF,YAAA,CAGsB,SAHtB,EAGsB,IAHtB,EAGsB,WAAA,CAHK,KAAA,CAAA,QAGL,EAHa,UAAnB,OAAmB,EAAZ;yBAAvB,YAAA,CAGsB,kBAHtB,EAGsB;AAHgB,MAAA,GAAG,EAAE,OAAO,CAAC,EAG7B;AAFrB,MAAA,IAAI,EAAE,OAAO,CAAC,IAEO;AADrB,MAAA,EAAE,EAAE,OAAO,CAAC,EACS;AAArB,MAAA,IAAI,EAAE,OAAO,CAAC;AAAO,KAHtB,E,IAAA,E,CAAA,E,sBAAA,C;GAGsB,CAHtB,E,GAAA,CAIE,EALN,C","sourcesContent":["<template>\n    <div class=\"messages\">\n        <message v-for=\"message in messages\" :key=\"message.id\"\n        :text=\"message.text\" \n        :id=\"message.id\" \n        :read=\"message.read\"/>\n    </div>\n    \n</template>\n\n<script>\n    import message from \"./message\"\n\n    export default {\n        name: 'messages',\n        components: {\n            message\n        },\n        data() {\n            return{\n                messages: [],\n            }\n        },\n        async created(){\n            var response = await fetch('http://localhost:8000/api/get_messages/');\n            this.messages = await response.json();\n            setInterval(() => this.updateMessages(), 10000);         \n        },  \n        methods: {\n            async updateMessages(){  \n                var id = 0\n                if (this.messages.length != 0){\n\n                    id = this.messages[this.messages.length - 1].id;\n                }              \n                var response = await fetch(`http://localhost:8000/api/get_messages/?last_id=${id}`);              \n                if (await response.ok){\n                    var new_messages = await response.json();\n                    for (let index = 0; index < new_messages.length; index++){ \n                        this.messages.push(new_messages[index]); \n                    }\n                               \n                }\n            },\n        }\n    }\n</script>"],"sourceRoot":""}]}