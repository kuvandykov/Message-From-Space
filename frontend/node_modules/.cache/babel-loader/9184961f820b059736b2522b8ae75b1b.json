{"remainingRequest":"/home/KRL/proga/projects/Message-From-Space/frontend/node_modules/babel-loader/lib/index.js!/home/KRL/proga/projects/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/KRL/proga/projects/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/KRL/proga/projects/Message-From-Space/frontend/src/components/messages.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/KRL/proga/projects/Message-From-Space/frontend/src/components/messages.vue","mtime":1617482780868},{"path":"/home/KRL/proga/projects/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/KRL/proga/projects/Message-From-Space/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/KRL/proga/projects/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/KRL/proga/projects/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL0tSTC9wcm9nYS9wcm9qZWN0cy9NZXNzYWdlLUZyb20tU3BhY2UvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgbWVzc2FnZSBmcm9tICIuL21lc3NhZ2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ21lc3NhZ2VzJywKICBjb21wb25lbnRzOiB7CiAgICBtZXNzYWdlOiBtZXNzYWdlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVzc2FnZXM6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2dldF9tZXNzYWdlcy8nKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBfdGhpcy5tZXNzYWdlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLnVwZGF0ZU1lc3NhZ2VzKCk7CiAgICAgICAgICAgICAgfSwgMTAwMDApOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlTWVzc2FnZXM6IGZ1bmN0aW9uIHVwZGF0ZU1lc3NhZ2VzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBpZCwgcmVzcG9uc2UsIG5ld19tZXNzYWdlcywgaW5kZXg7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlkID0gMDsKCiAgICAgICAgICAgICAgICBpZiAoX3RoaXMyLm1lc3NhZ2VzLmxlbmd0aCAhPSAwKSB7CiAgICAgICAgICAgICAgICAgIGlkID0gX3RoaXMyLm1lc3NhZ2VzW190aGlzMi5tZXNzYWdlcy5sZW5ndGggLSAxXS5pZDsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvZ2V0X21lc3NhZ2VzLz9sYXN0X2lkPSIuY29uY2F0KGlkKSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2Uub2s7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIGlmICghX2NvbnRleHQyLnNlbnQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBuZXdfbWVzc2FnZXMgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICBmb3IgKGluZGV4ID0gMDsgaW5kZXggPCBuZXdfbWVzc2FnZXMubGVuZ3RoOyBpbmRleCsrKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMi5tZXNzYWdlcy5wdXNoKG5ld19tZXNzYWdlc1tpbmRleF0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/KRL/proga/projects/Message-From-Space/frontend/src/components/messages.vue"],"names":[],"mappings":";;;AAWI,OAAO,OAAP,MAAoB,WAApB;AAEA,eAAe;AACX,EAAA,IAAI,EAAE,UADK;AAEX,EAAA,UAAU,EAAE;AACR,IAAA,OAAM,EAAN;AADQ,GAFD;AAKX,EAAA,IALW,kBAKJ;AACH,WAAM;AACF,MAAA,QAAQ,EAAE;AADR,KAAN;AAGH,GATU;AAUL,EAAA,OAVK,qBAUI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAK,CAAC,yCAAD,CADf;;AAAA;AACP,cAAA,QADO;AAAA;AAAA,qBAEW,QAAQ,CAAC,IAAT,EAFX;;AAAA;AAEX,cAAA,KAAI,CAAC,QAFM;AAGX,cAAA,WAAW,CAAC;AAAA,uBAAM,KAAI,CAAC,cAAL,EAAN;AAAA,eAAD,EAA8B,KAA9B,CAAX;;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAId,GAdU;AAeX,EAAA,OAAO,EAAE;AACC,IAAA,cADD,4BACiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,gBAAA,EADc,GACT,CADS;;AAElB,oBAAI,MAAI,CAAC,QAAL,CAAc,MAAd,IAAwB,CAA5B,EAA8B;AAE1B,kBAAA,EAAC,GAAI,MAAI,CAAC,QAAL,CAAc,MAAI,CAAC,QAAL,CAAc,MAAd,GAAuB,CAArC,EAAwC,EAA7C;AACJ;;AALkB;AAAA,uBAMG,KAAK,2DAAoD,EAApD,EANR;;AAAA;AAMd,gBAAA,QANc;AAAA;AAAA,uBAOR,QAAQ,CAAC,EAPD;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQW,QAAQ,CAAC,IAAT,EARX;;AAAA;AAQV,gBAAA,YARU;;AASd,qBAAS,KAAT,GAAiB,CAAjB,EAAoB,KAAI,GAAI,YAAY,CAAC,MAAzC,EAAiD,KAAK,EAAtD,EAAyD;AACrD,kBAAA,MAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,YAAY,CAAC,KAAD,CAA/B;AACJ;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcrB;AAfI;AAfE,CAAf","sourcesContent":["<template>\n    <div class=\"messages\">\n        <message v-for=\"message in messages\" :key=\"message.id\"\n        :text=\"message.text\" \n        :id=\"message.id\" \n        :read=\"message.read\"/>\n    </div>\n    \n</template>\n\n<script>\n    import message from \"./message\"\n\n    export default {\n        name: 'messages',\n        components: {\n            message\n        },\n        data() {\n            return{\n                messages: [],\n            }\n        },\n        async created(){\n            var response = await fetch('http://localhost:8000/api/get_messages/');\n            this.messages = await response.json();\n            setInterval(() => this.updateMessages(), 10000);         \n        },  \n        methods: {\n            async updateMessages(){  \n                var id = 0\n                if (this.messages.length != 0){\n\n                    id = this.messages[this.messages.length - 1].id;\n                }              \n                var response = await fetch(`http://localhost:8000/api/get_messages/?last_id=${id}`);              \n                if (await response.ok){\n                    var new_messages = await response.json();\n                    for (let index = 0; index < new_messages.length; index++){ \n                        this.messages.push(new_messages[index]); \n                    }\n                               \n                }\n            },\n        }\n    }\n</script>"],"sourceRoot":""}]}