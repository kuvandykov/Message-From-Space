{"remainingRequest":"/home/lukura/Message-From-Space/frontend/node_modules/thread-loader/dist/cjs.js!/home/lukura/Message-From-Space/frontend/node_modules/babel-loader/lib/index.js!/home/lukura/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lukura/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/lukura/Message-From-Space/frontend/src/components/messages.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/lukura/Message-From-Space/frontend/src/components/messages.vue","mtime":1617617635547},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1617561885301},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1617562136116},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/babel-loader/lib/index.js","mtime":1617561872516},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1617561885301},{"path":"/home/lukura/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1617562142756}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2x1a3VyYS9NZXNzYWdlLUZyb20tU3BhY2UvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgbWVzc2FnZSBmcm9tICIuL21lc3NhZ2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ21lc3NhZ2VzJywKICBjb21wb25lbnRzOiB7CiAgICBtZXNzYWdlOiBtZXNzYWdlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWVzc2FnZXM6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCdodHRwOi8vbHVrdXJhLnB5dGhvbmFueXdoZXJlLmNvbS9hcGkvZ2V0X21lc3NhZ2VzLycpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIF90aGlzLm1lc3NhZ2VzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMudXBkYXRlTWVzc2FnZXMoKTsKICAgICAgICAgICAgICB9LCAxMDAwMCk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVNZXNzYWdlczogZnVuY3Rpb24gdXBkYXRlTWVzc2FnZXMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGlkLCByZXNwb25zZSwgbmV3X21lc3NhZ2VzLCBpbmRleDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWQgPSAwOwoKICAgICAgICAgICAgICAgIGlmIChfdGhpczIubWVzc2FnZXMubGVuZ3RoICE9IDApIHsKICAgICAgICAgICAgICAgICAgaWQgPSBfdGhpczIubWVzc2FnZXNbX3RoaXMyLm1lc3NhZ2VzLmxlbmd0aCAtIDFdLmlkOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2x1a3VyYS5weXRob25hbnl3aGVyZS5jb20vYXBpL2dldF9tZXNzYWdlcy8/bGFzdF9pZD0iLmNvbmNhdChpZCkpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLm9rOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBpZiAoIV9jb250ZXh0Mi5zZW50KSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgbmV3X21lc3NhZ2VzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgbmV3X21lc3NhZ2VzLmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgICAgICAgICAgICBfdGhpczIubWVzc2FnZXMucHVzaChuZXdfbWVzc2FnZXNbaW5kZXhdKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/lukura/Message-From-Space/frontend/src/components/messages.vue"],"names":[],"mappings":";;;AAWI,OAAO,OAAP,MAAoB,WAApB;AAEA,eAAe;AACX,EAAA,IAAI,EAAE,UADK;AAEX,EAAA,UAAU,EAAE;AACR,IAAA,OAAM,EAAN;AADQ,GAFD;AAKX,EAAA,IALW,kBAKJ;AACH,WAAM;AACF,MAAA,QAAQ,EAAE;AADR,KAAN;AAGH,GATU;AAUL,EAAA,OAVK,qBAUI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAK,CAAC,oDAAD,CADf;;AAAA;AACP,cAAA,QADO;AAAA;AAAA,qBAEW,QAAQ,CAAC,IAAT,EAFX;;AAAA;AAEX,cAAA,KAAI,CAAC,QAFM;AAGX,cAAA,WAAW,CAAC;AAAA,uBAAM,KAAI,CAAC,cAAL,EAAN;AAAA,eAAD,EAA8B,KAA9B,CAAX;;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAId,GAdU;AAeX,EAAA,OAAO,EAAE;AACC,IAAA,cADD,4BACiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,gBAAA,EADc,GACT,CADS;;AAElB,oBAAI,MAAI,CAAC,QAAL,CAAc,MAAd,IAAwB,CAA5B,EAA8B;AAE1B,kBAAA,EAAC,GAAI,MAAI,CAAC,QAAL,CAAc,MAAI,CAAC,QAAL,CAAc,MAAd,GAAuB,CAArC,EAAwC,EAA7C;AACJ;;AALkB;AAAA,uBAMG,KAAK,sEAA+D,EAA/D,EANR;;AAAA;AAMd,gBAAA,QANc;AAAA;AAAA,uBAOR,QAAQ,CAAC,EAPD;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQW,QAAQ,CAAC,IAAT,EARX;;AAAA;AAQV,gBAAA,YARU;;AASd,qBAAS,KAAT,GAAiB,CAAjB,EAAoB,KAAI,GAAI,YAAY,CAAC,MAAzC,EAAiD,KAAK,EAAtD,EAAyD;AACrD,kBAAA,MAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,YAAY,CAAC,KAAD,CAA/B;AACJ;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcrB;AAfI;AAfE,CAAf","sourcesContent":["<template>\n    <div class=\"messages\">\n        <message v-for=\"message in messages\" :key=\"message.id\"\n        :text=\"message.text\"\n        :id=\"message.id\"\n        :read=\"message.read\"/>\n    </div>\n\n</template>\n\n<script>\n    import message from \"./message\"\n\n    export default {\n        name: 'messages',\n        components: {\n            message\n        },\n        data() {\n            return{\n                messages: [],\n            }\n        },\n        async created(){\n            var response = await fetch('http://lukura.pythonanywhere.com/api/get_messages/');\n            this.messages = await response.json();\n            setInterval(() => this.updateMessages(), 10000);\n        },\n        methods: {\n            async updateMessages(){\n                var id = 0\n                if (this.messages.length != 0){\n\n                    id = this.messages[this.messages.length - 1].id;\n                }\n                var response = await fetch(`http://lukura.pythonanywhere.com/api/get_messages/?last_id=${id}`);\n                if (await response.ok){\n                    var new_messages = await response.json();\n                    for (let index = 0; index < new_messages.length; index++){\n                        this.messages.push(new_messages[index]);\n                    }\n\n                }\n            },\n        }\n    }\n</script>"],"sourceRoot":""}]}