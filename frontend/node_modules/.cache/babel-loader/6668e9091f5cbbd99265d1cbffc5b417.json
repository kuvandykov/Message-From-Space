{"remainingRequest":"/home/KRL/proga/projects/Messages-From-Space/frontend/node_modules/babel-loader/lib/index.js!/home/KRL/proga/projects/Messages-From-Space/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/KRL/proga/projects/Messages-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/KRL/proga/projects/Messages-From-Space/frontend/src/components/messages.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/KRL/proga/projects/Messages-From-Space/frontend/src/components/messages.vue","mtime":1617482780868},{"path":"/home/KRL/proga/projects/Messages-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/KRL/proga/projects/Messages-From-Space/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/KRL/proga/projects/Messages-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/KRL/proga/projects/Messages-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL0tSTC9wcm9nYS9wcm9qZWN0cy9NZXNzYWdlcy1Gcm9tLVNwYWNlL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IG1lc3NhZ2UgZnJvbSAiLi9tZXNzYWdlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdtZXNzYWdlcycsCiAgY29tcG9uZW50czogewogICAgbWVzc2FnZTogbWVzc2FnZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lc3NhZ2VzOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS9nZXRfbWVzc2FnZXMvJyk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgX3RoaXMubWVzc2FnZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy51cGRhdGVNZXNzYWdlcygpOwogICAgICAgICAgICAgIH0sIDEwMDAwKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZU1lc3NhZ2VzOiBmdW5jdGlvbiB1cGRhdGVNZXNzYWdlcygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgaWQsIHJlc3BvbnNlLCBuZXdfbWVzc2FnZXMsIGluZGV4OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZCA9IDA7CgogICAgICAgICAgICAgICAgaWYgKF90aGlzMi5tZXNzYWdlcy5sZW5ndGggIT0gMCkgewogICAgICAgICAgICAgICAgICBpZCA9IF90aGlzMi5tZXNzYWdlc1tfdGhpczIubWVzc2FnZXMubGVuZ3RoIC0gMV0uaWQ7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjgwMDAvYXBpL2dldF9tZXNzYWdlcy8/bGFzdF9pZD0iLmNvbmNhdChpZCkpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLm9rOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBpZiAoIV9jb250ZXh0Mi5zZW50KSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgbmV3X21lc3NhZ2VzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgZm9yIChpbmRleCA9IDA7IGluZGV4IDwgbmV3X21lc3NhZ2VzLmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgICAgICAgICAgICBfdGhpczIubWVzc2FnZXMucHVzaChuZXdfbWVzc2FnZXNbaW5kZXhdKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/home/KRL/proga/projects/Messages-From-Space/frontend/src/components/messages.vue"],"names":[],"mappings":";;;AAWI,OAAO,OAAP,MAAoB,WAApB;AAEA,eAAe;AACX,EAAA,IAAI,EAAE,UADK;AAEX,EAAA,UAAU,EAAE;AACR,IAAA,OAAM,EAAN;AADQ,GAFD;AAKX,EAAA,IALW,kBAKJ;AACH,WAAM;AACF,MAAA,QAAQ,EAAE;AADR,KAAN;AAGH,GATU;AAUL,EAAA,OAVK,qBAUI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAK,CAAC,yCAAD,CADf;;AAAA;AACP,cAAA,QADO;AAAA;AAAA,qBAEW,QAAQ,CAAC,IAAT,EAFX;;AAAA;AAEX,cAAA,KAAI,CAAC,QAFM;AAGX,cAAA,WAAW,CAAC;AAAA,uBAAM,KAAI,CAAC,cAAL,EAAN;AAAA,eAAD,EAA8B,KAA9B,CAAX;;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAId,GAdU;AAeX,EAAA,OAAO,EAAE;AACC,IAAA,cADD,4BACiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,gBAAA,EADc,GACT,CADS;;AAElB,oBAAI,MAAI,CAAC,QAAL,CAAc,MAAd,IAAwB,CAA5B,EAA8B;AAE1B,kBAAA,EAAC,GAAI,MAAI,CAAC,QAAL,CAAc,MAAI,CAAC,QAAL,CAAc,MAAd,GAAuB,CAArC,EAAwC,EAA7C;AACJ;;AALkB;AAAA,uBAMG,KAAK,2DAAoD,EAApD,EANR;;AAAA;AAMd,gBAAA,QANc;AAAA;AAAA,uBAOR,QAAQ,CAAC,EAPD;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQW,QAAQ,CAAC,IAAT,EARX;;AAAA;AAQV,gBAAA,YARU;;AASd,qBAAS,KAAT,GAAiB,CAAjB,EAAoB,KAAI,GAAI,YAAY,CAAC,MAAzC,EAAiD,KAAK,EAAtD,EAAyD;AACrD,kBAAA,MAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,YAAY,CAAC,KAAD,CAA/B;AACJ;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcrB;AAfI;AAfE,CAAf","sourcesContent":["<template>\n    <div class=\"messages\">\n        <message v-for=\"message in messages\" :key=\"message.id\"\n        :text=\"message.text\" \n        :id=\"message.id\" \n        :read=\"message.read\"/>\n    </div>\n    \n</template>\n\n<script>\n    import message from \"./message\"\n\n    export default {\n        name: 'messages',\n        components: {\n            message\n        },\n        data() {\n            return{\n                messages: [],\n            }\n        },\n        async created(){\n            var response = await fetch('http://localhost:8000/api/get_messages/');\n            this.messages = await response.json();\n            setInterval(() => this.updateMessages(), 10000);         \n        },  \n        methods: {\n            async updateMessages(){  \n                var id = 0\n                if (this.messages.length != 0){\n\n                    id = this.messages[this.messages.length - 1].id;\n                }              \n                var response = await fetch(`http://localhost:8000/api/get_messages/?last_id=${id}`);              \n                if (await response.ok){\n                    var new_messages = await response.json();\n                    for (let index = 0; index < new_messages.length; index++){ \n                        this.messages.push(new_messages[index]); \n                    }\n                               \n                }\n            },\n        }\n    }\n</script>"],"sourceRoot":""}]}