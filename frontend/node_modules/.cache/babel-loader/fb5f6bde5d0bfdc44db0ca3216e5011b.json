{"remainingRequest":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/babel-loader/lib/index.js!/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/KRL/proga/projects/test/Message-From-Space/frontend/src/components/messages.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/src/components/messages.vue","mtime":1617793366102},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1617793365330},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/babel-loader/lib/index.js","mtime":1617793365298},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1617793365330},{"path":"/home/KRL/proga/projects/test/Message-From-Space/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1617793366042}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL0tSTC9wcm9nYS9wcm9qZWN0cy90ZXN0L01lc3NhZ2UtRnJvbS1TcGFjZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBtZXNzYWdlIGZyb20gIi4vbWVzc2FnZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnbWVzc2FnZXMnLAogIGNvbXBvbmVudHM6IHsKICAgIG1lc3NhZ2U6IG1lc3NhZ2UKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlczogW10KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goJ2h0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvZ2V0X21lc3NhZ2VzLycpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIF90aGlzLm1lc3NhZ2VzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMudXBkYXRlTWVzc2FnZXMoKTsKICAgICAgICAgICAgICB9LCAxMDAwMCk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVNZXNzYWdlczogZnVuY3Rpb24gdXBkYXRlTWVzc2FnZXMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGlkLCByZXNwb25zZSwgbmV3X21lc3NhZ2VzLCBpbmRleDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWQgPSAwOwoKICAgICAgICAgICAgICAgIGlmIChfdGhpczIubWVzc2FnZXMubGVuZ3RoICE9IDApIHsKICAgICAgICAgICAgICAgICAgaWQgPSBfdGhpczIubWVzc2FnZXNbX3RoaXMyLm1lc3NhZ2VzLmxlbmd0aCAtIDFdLmlkOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS9nZXRfbWVzc2FnZXMvP2xhc3RfaWQ9Ii5jb25jYXQoaWQpKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5vazsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgaWYgKCFfY29udGV4dDIuc2VudCkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIG5ld19tZXNzYWdlcyA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICAgIGZvciAoaW5kZXggPSAwOyBpbmRleCA8IG5ld19tZXNzYWdlcy5sZW5ndGg7IGluZGV4KyspIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLm1lc3NhZ2VzLnB1c2gobmV3X21lc3NhZ2VzW2luZGV4XSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["/home/KRL/proga/projects/test/Message-From-Space/frontend/src/components/messages.vue"],"names":[],"mappings":";;;AAWI,OAAO,OAAP,MAAoB,WAApB;AAEA,eAAe;AACX,EAAA,IAAI,EAAE,UADK;AAEX,EAAA,UAAU,EAAE;AACR,IAAA,OAAM,EAAN;AADQ,GAFD;AAKX,EAAA,IALW,kBAKJ;AACH,WAAM;AACF,MAAA,QAAQ,EAAE;AADR,KAAN;AAGH,GATU;AAUL,EAAA,OAVK,qBAUI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAK,CAAC,yCAAD,CADf;;AAAA;AACP,cAAA,QADO;AAAA;AAAA,qBAEW,QAAQ,CAAC,IAAT,EAFX;;AAAA;AAEX,cAAA,KAAI,CAAC,QAFM;AAGX,cAAA,WAAW,CAAC;AAAA,uBAAM,KAAI,CAAC,cAAL,EAAN;AAAA,eAAD,EAA8B,KAA9B,CAAX;;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAId,GAdU;AAeX,EAAA,OAAO,EAAE;AACC,IAAA,cADD,4BACiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACd,gBAAA,EADc,GACT,CADS;;AAElB,oBAAI,MAAI,CAAC,QAAL,CAAc,MAAd,IAAwB,CAA5B,EAA8B;AAE1B,kBAAA,EAAC,GAAI,MAAI,CAAC,QAAL,CAAc,MAAI,CAAC,QAAL,CAAc,MAAd,GAAuB,CAArC,EAAwC,EAA7C;AACJ;;AALkB;AAAA,uBAMG,KAAK,2DAAoD,EAApD,EANR;;AAAA;AAMd,gBAAA,QANc;AAAA;AAAA,uBAOR,QAAQ,CAAC,EAPD;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQW,QAAQ,CAAC,IAAT,EARX;;AAAA;AAQV,gBAAA,YARU;;AASd,qBAAS,KAAT,GAAiB,CAAjB,EAAoB,KAAI,GAAI,YAAY,CAAC,MAAzC,EAAiD,KAAK,EAAtD,EAAyD;AACrD,kBAAA,MAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,YAAY,CAAC,KAAD,CAA/B;AACJ;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcrB;AAfI;AAfE,CAAf","sourcesContent":["<template>\n    <div class=\"messages\">\n        <message v-for=\"message in messages\" :key=\"message.id\"\n        :text=\"message.text\" \n        :id=\"message.id\" \n        :read=\"message.read\"/>\n    </div>\n    \n</template>\n\n<script>\n    import message from \"./message\"\n\n    export default {\n        name: 'messages',\n        components: {\n            message\n        },\n        data() {\n            return{\n                messages: [],\n            }\n        },\n        async created(){\n            var response = await fetch('http://localhost:8000/api/get_messages/');\n            this.messages = await response.json();\n            setInterval(() => this.updateMessages(), 10000);         \n        },  \n        methods: {\n            async updateMessages(){  \n                var id = 0\n                if (this.messages.length != 0){\n\n                    id = this.messages[this.messages.length - 1].id;\n                }              \n                var response = await fetch(`http://localhost:8000/api/get_messages/?last_id=${id}`);              \n                if (await response.ok){\n                    var new_messages = await response.json();\n                    for (let index = 0; index < new_messages.length; index++){ \n                        this.messages.push(new_messages[index]); \n                    }\n                               \n                }\n            },\n        }\n    }\n</script>"],"sourceRoot":""}]}